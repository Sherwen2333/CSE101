import sys

student_file = 'lab11.py'

f = open(student_file)
lines = f.readlines()
f.close()
lines = [line.strip() for line in lines]
lines = [line if not line.startswith('#') else '' for line in lines]
code_clean = True
for i in range(len(lines)):
    if 'input' in lines[i]:
        print(f'Line {i} of {student_file} contains an input() statement. You must delete this line.')
        code_clean = False
    if 'exit' in lines[i] or 'sys.exit' in lines[i]:
        print(f'Line {i} of {student_file} contains an exit() statement. You must delete this line.')
        code_clean = False

if not code_clean:
    print('Your ' + student_file + ' file contains one or more invalid lines of code.')
    print('You will need to remove them before running the driver.')
    print('Note that the presence of those lines renders your work ungradeable!')
    sys.exit()

part_counts = [0] * 2
test_counts = [20, 10]

from lab11 import *

# Testing Part I
args = [
    ['  PPPPPPPPggggggggggffff+++n     M\r\n'],
    ['   PwwwwwwRRRRRR\r'],
    ['   hhhhhhhhhhcccccccFFFFFFFFFvvvvdddd        ttttttttt\r\n'],
    ['   mmmmmmmm       ???? ----------  Uwwww   <<<<TTTTTTTTT    SSSSSSSS    FF       \n'],
    ['   ######EEEE       [[[[[[[S:::::::       \r'],
    ['....xx    ;;;;;;;;;999922       }}}}}}}}}cccccKKK        3\r\n'],
    ['II4*********)))))))vvvvvvvLLLLLLLLLpp   ]]]]]]]\n'],
    ['  NNNNNN        zzzzzzzzzzccccccccc}}}}}}}jjjjjjji  FFF\r'],
    [' XXX       ddssPPPPPP\r'],
    ['((((((((((  HHHHH  ????????....   FFUUUUUUUUUU       LLLLLL\n'],
    ['  8888     yyyyyyyyyy,,,,,,,,       l2222222\n'],
    [' gggggggmmmmmm&&&&&&33333 yyyyyyyyiiiiiii\r\n'],
    ['QQQ000  [[[;;::::CCRRRRRRR%%%   \r\n'],
    ['  ggggggggggwwwwwwwwJJJJ\r\n'],
    ['zzzzzFFFFU  ((     ))))))XXXXXX      pssssssssss        VVVVVVVVV\r'],
    [' H      w   RRRRRRRR\n'],
    [' PPPPPPPPPPjjjjjj IIIIllllllll\r\n'],
    ['  +++++$$$$   zzzzzzzl8888888888\r\n'],
    ['   WWWWWWW      dddddd !!!   ......VVVVVV      wwwwww>>>>>>>\n'],
    [' zz{oo\n'],
]
expected_return_values = [
    '2 8P10g4f3+1n5 1M',
    '3 1P6w6R',
    '3 10h7c9F4v4d8 9t',
    '3 8m7 4?1 10-2 1U4w3 4<9T4 8S4 2F7 ',
    '3 6#4E7 7[1S7:7 ',
    '4.2x4 9;49227 9}5c3K8 13',
    '2I149*7)7v9L2p3 7]',
    '2 6N8 10z9c7}7j1i2 3F',
    '1 3X7 2d2s6P',
    '10(2 5H2 8?4.3 2F10U7 6L',
    '2 485 10y8,7 1l72',
    '1 7g6m6&531 8y7i',
    '3Q302 3[2;4:2C7R3%3 ',
    '2 10g8w4J',
    '5z4F1U2 2(5 6)6X6 1p10s8 9V',
    '1 1H6 1w3 8R',
    '1 10P6j1 4I8l',
    '2 5+4$3 7z1l108',
    '3 7W6 6d1 3!3 6.6V6 6w7>',
    '1 2z1{2o'
]


print("############ Testing Part I ############")
for a, e in zip(args, expected_return_values):
    print('Testing student_alert() with orders = {}'.format(*a))
    print('Expected: {}'.format(e))
    actual = compress_line(*a)
    print('Actual:   {}'.format(actual))
    if e == actual:
        print('Correct!')
        part_counts[0] += 1
    else:
        print('Incorrect!')
print('########################################')
print()


# Testing Part II
args = [
    ['./test_files/yupeng.txt'],
    ['./test_files/cse101.txt'],
    ['./test_files/helloworld.txt'],
    ['./test_files/spooky.txt'],
    ['./test_files/123456.txt'],
    ['./test_files/piazza.txt'],
    ['./test_files/time.txt'],
    ['./test_files/cheeseburger.txt'],
    ['./test_files/chickfila.txt'],
    ['./test_files/foobar.txt'],
]
expected_return_values = [
    ['7Y7 7Y100 7Y7 7Y2 4i', '1Y5:1Y7 1Y5:1Y100 1Y5:1Y7 1Y5:1Y1 1i4:1i', '1Y5:1Y7 1Y5:1Y100 1Y5:1Y7 1Y5:1Y2 4i', '1Y6:1Y5 1Y6:1Y100 1Y6:1Y5 1Y6:1Y', '3Y5:1Y3 1Y5:3Y6u4 6u1 5p3 9p7 12e4 4n2 8n7 9g3 5g5 3Y5:1Y3 1Y5:3Y7i4n2 8n', '3 1Y5:1Y1 1Y5:1Y3 1u4:1u4 1u4:1u1 1p4:3p9:1p4 2e12:2e2 1n3:2n8:2n4 1g9:3g4:1g8 1Y5:1Y1 1Y5:1Y3 1i5:1i1n3:2n8:2n', '4 1Y5:1Y5:1Y4 1u4:1u4 1u4:1u1 1p17:1p2 1e6:5e5:2e1n14:2n2 1g17:1g9 1Y5:1Y5:1Y5 1i4:1i1n14:2n', '5 1Y9:1Y5 1u4:1u4 1u4:1u1 2p6:5p6:1p1e6:1e5 1e5:1e2n15:1n1g6:5g6:2g10 1Y9:1Y6 1i4:1i2n15:1n', '6 1Y7:1Y6 1u4:1u4 1u4:1u2 1p5:1p5 1p5:1p1e7:5e6:1e2 1n5:4n5:1n1g5:1g5 1g5:1g12 1Y7:1Y7 1i4:1i2 1n5:4n5:1n', '7 1Y5:1Y7 1u4:1u4 1u4:1u2 1p5:1p5 1p5:1p1e17:1e3 1n4:1n4 1n4:1n1g5:1g5 1g5:1g13 1Y5:1Y8 1i4:1i2 1n4:1n4 1n4:1n', '7 1Y5:1Y7 1u4:1u4 1u4:1u2 1p5:1p5 1p5:1p1e6:11e4 1n4:1n4 1n4:1n1g5:1g5 1g5:1g13 1Y5:1Y8 1i4:1i2 1n4:1n4 1n4:1n', '7 1Y5:1Y7 1u5:4u5:1u2 1p5:1p4 1p6:1p1e7:1e13 1n4:1n4 1n4:1n1g6:1g4 1g5:1g13 1Y5:1Y8 1i4:1i2 1n4:1n4 1n4:1n', '7 1Y5:1Y7 1u15:2u1p5:5p7:1p1e8:1e12 1n4:1n4 1n4:1n1g7:5g5:1g13 1Y5:1Y7 1i6:1i1 1n4:1n4 1n4:1n', '4 4Y5:4Y5 1u15:1u1p16:1p2 1e8:8e4 1n4:1n4 1n4:1n1 1g16:1g10 4Y5:4Y4 1i6:1i1 1n4:1n4 1n4:1n', '4 1Y11:1Y6 2u8:2u3:1u1p14:2p4 2e13:1e4 1n4:1n4 1n4:1n2 2g14:1g10 1Y11:1Y4 1i6:1i1 1n4:1n4 1n4:1n', '4 13Y8 8u2 4u1p6:8p8 14e4 6n4 6n4 8g6:1g10 13Y4 8i1 6n4 6n', '39 1p5:1p62 1g5:1g', '39 1p5:1p50 6g6 1g5:1g', '38 1p7:1p49 1g5:2g3 2g5:1g', '38 1p7:1p50 1g6:3g7:1g', '38 1p7:1p51 2g13:1g', '38 9p53 3g6:3g', '103 6g'],
    ['3 3_5 3_5 3_6 1_7 2_6 1_', '2 1/1 2_1|3 1/1 2_1|3 1|1 2_1|4 1/1 1|5 1/2 1\\4 1/1 1|', '1 1|1 1(2_4 1\\2_1 1\\3 1|1 1_1|5 1|1 1|4 1|1 1(1)1 1|3 1|1 1|', '2 1\\3_1|3 1|3_1/3 1|3_1|3 1_1|1_1|1_3 1_1\\2_1/3 1_1|1_1|1_', '1_1|5"1|1_1|5"1|1_1|5"1|1_1|5"1|1_1|5"1|1_1|5"1|', '1"1`1-101-101-1\'1"1`1-101-101-1\'1"1`1-101-101-1\'1"1`1-101-101-1\'1"1`1-101-101-1\'1"1`1-101-101-1\''],
    ['1 1.16-1.2 1.16-1.2 1.16-1.2 1.16-1.2 1.16-1.3 1.16-1.2 1.16-1.2 1.16-1.2 1.16-1.2 1.16-1.2 1.16-1.', '1|1 1.14-1.1 2|1 1.14-1.1 2|1 1.14-1.1 2|1 1.14-1.1 2|1 1.14-1.1 1|1 1|1 1.14-1.1 2|1 1.14-1.1 2|1 1.14-1.1 2|1 1.14-1.1 2|1 1.14-1.1 2|1 1.14-1.1 1|', '1|1 1|2 4_2 4_2 1|1 2|1 1|2 9_3 1|1 2|1 1|3 5_6 1|1 2|1 1|3 5_6 1|1 2|1 1|5 4_5 1|1 1|1 1|1 1|1 5_2 5_1 1|1 2|1 1|5 4_5 1|1 2|1 1|2 7_5 1|1 2|1 1|3 5_6 1|1 2|1 1|2 8_4 1|1 2|1 1|14 1|1 1|', "1|1 1|1 1|1_3 2|3 1_1|1 1|1 2|1 1|1 1|1_3 3_2 1|2 1|1 2|1 1|2 1|1_3 1_1|5 1|1 2|1 1|2 1|1_3 1_1|5 1|1 2|1 1|3 1.1'4 1`1.3 1|1 1|1 1|1 2|1_3 1_2|1_3 1_2|1 2|1 1|3 1.1'4 1`1.3 1|1 2|1 1|1 1|1_3 2_1 1\\4 1|1 2|1 1|2 1|1_3 1_1|5 1|1 2|1 1|1 1|1_3 3_1 1`1.2 1|1 2|1 1|6 1_7 1|1 1|", '1|1 1|3 1|1 1|2_1|1 1|3 1|1 2|1 1|3 1|1 1|1_2 1\\1_1|2 1|1 2|1 1|4 1|1 1|7 1|1 2|1 1|4 1|1 1|7 1|1 2|1 1|2 1/2 1.2-1.2 1\\2 1|1 1|1 1|1 1|2 1|1 1|1 1/1\\1 1|1 1|2 1|1 2|1 1|2 1/2 1.2-1.2 1\\2 1|1 2|1 1|3 1|1 1|2_1)1 1|3 1|1 2|1 1|4 1|1 1|7 1|1 2|1 1|3 1|1 1|3 1`1.1 1\\1 1|1 2|1 1|5 1|1 1|6 1|1 1|', '1|1 1|3 1|2 2_2 1|3 1|1 2|1 1|3 1|2 1_1|2 1_3 1|1 2|1 1|4 1|1 1|3 1_3 1|1 2|1 1|4 1|1 1|3 1_3 1|1 2|1 1|2 1|1 1|4 1|1 1|2 1|1 1|1 1|1 1|2 1|1 1|1/2 1\\1|1 1|2 1|1 2|1 1|2 1|1 1|4 1|1 1|2 1|1 2|1 1|3 1|2 2_1 1/4 1|1 2|1 1|4 1|1 1|3 1_3 1|1 2|1 1|3 1|1 1|4 1|1 1|1 1|1 2|1 1|5 1|1 1|6 1|1 1|', "1|1 1|2 1_1|1 1|2 1|1 1|1_2 1|1 2|1 1|2 1_1|1 1|3_1/1 1|2 1|1 2|1 1|3 1_1|1 1|2_1/1 1|2 1|1 2|1 1|3 1_1|1 1|2_1/1 1|2 1|1 2|1 1|2 1\\2 1`2-1'2 1/2 1|1 1|1 1|1 1|2 1|3 1/1\\3 1|2 1|1 2|1 1|2 1\\2 1`2-1'2 1/2 1|1 2|1 1|2 1_1|1 1|2 1\\1 1\\1_2 1|1 2|1 1|3 1_1|1 1|2_1/1 1|2 1|1 2|1 1|2 1_1|1 1|3_1.1'1 1/1 1|1 2|1 1|5 1|1 1|6 1|1 1|", "1|1 1|1 1|4_2|4_1|1 1|1 2|1 1|1 1|9_1|2 1|1 2|1 1|2 1|8_1|2 1|1 2|1 1|2 1|8_1|2 1|1 2|1 1|3 1`1.4_1.1'3 1|1 1|1 1|1 1|2 1|2_1/2 1\\2_1|2 1|1 2|1 1|3 1`1.4_1.1'3 1|1 2|1 1|1 1|4_1|1 1|3_1|1 1|1 2|1 1|2 1|8_1|2 1|1 2|1 1|1 1|8_1.1'2 1|1 2|1 1|5 1|1_1|6 1|1 1|", '1|1 1|14 1|1 2|1 1|14 1|1 2|1 1|14 1|1 2|1 1|14 1|1 2|1 1|14 1|1 1|1 1|1 1|14 1|1 2|1 1|14 1|1 2|1 1|14 1|1 2|1 1|14 1|1 2|1 1|14 1|1 2|1 1|5 1(1_1)6 1|1 1|', "1|1 1'14-1'1 2|1 1'14-1'1 2|1 1'14-1'1 2|1 1'14-1'1 2|1 1'14-1'1 1|1 1|1 1'14-1'1 2|1 1'14-1'1 2|1 1'14-1'1 2|1 1'14-1'1 2|1 1'14-1'1 2|1 1'14-1'1 1|", "1 1'16-1'2 1'16-1'2 1'16-1'2 1'16-1'2 1'16-1'3 1'16-1'2 1'16-1'2 1'16-1'2 1'16-1'2 1'16-1'2 1'16-1'"],
    ["2 1.1-1'1)5 1_1 1(1`1-1.27 1.1-1.1 1.1-1'1)", '1 1(1 2O1 1)1.2 1(1 1(2O2 1)26 1\\2 1(1 2O1 1)', "1(1_1)3-1\\1_1)1_1.1`5 1\\1 1.1-1'1)1,5-1.2 1.1-1'1)1,5-1.1 1,2-1.1 1,2-1.3 1,2-1.3 1,2-1.", "1/4 1_1 1|1(2_3.2-2'1(1 2O1'2 1.1-1.2 1'1(1 2O1'2 1.1-1.2 1'1|2 1.1'3 1/4 1\\2 1`1.1'2 1/", "1\\2 1:1`1 1`1.1 1|2 1/2 1|1 1|1/3 1|2 1|1 1|2 1|1/3 1|2 1|1 1|2 2|6 1/1,2 1.1-1'1)5 1/", "1 1'2.1`2'1.1)1|2 1|1_1.1'1 1|1\\1_1)1 1|2 1|1\\1|2 1|1\\1_1)1 1|2 1|1\\1|2 2|5 1'1 1_1)1(2O2 1\\3 1/", "1.1-1.1_1)3 1\\1|2 1.3_1.1'2 1\\1 1|2 1|1 1|2 1|2 1\\1 1|2 1|1 1|2 2|2 1.3 1\\3 1|3 1/2 1/1\\1_", "1\\7 1/1|2 1|8 1`1'2 1'1-1'2 1'3 1`1'2 1'1-1'2 1'1|2 1|1\\3 1\\2 1`1-1.1/2 1/1.2_1)", "1 1`5-1'1 1`2-1'10 1`5-1'6 1`5-1'1 1`2-1'1 1'2-1'4 1`2-1'"],
    ['2 714 1525 15310 942 1859 86', '1 116:113 1215:222 1315:237 148:142 1516:158 166:16', '117:113 126:625:121 136:536:135 149:142 1516:157 166:16', '315:113 725 125:121 735 135:134 144:244:142 155:1256 166:16', '3 114:1115 125:1213 135:133 144:141 144:142 155:1516 166:16', '3 114:1115 125:1213 135:132 144:142 144:142 155:1515 166:16', '3 114:1112 424:126 835:132 144:143 144:142 155:1055 166:16', '3 114:1l7 526:227 1311:132 144:644:341515:153 168:56', '3 114:1l5 228:329 835:131 1416:141255:151 1614:26', '3 114:1l4 125:5220 135:131045:3412 155:15166:565:16', '3 114:1l3 125:1225 135:1310 144:1414 155:15165:165 165:16', '3 114:1l3 125:1225 135:1310 144:142 755 155:15165:165 165:16', '316:31125:127 62735 135:1310 144:142 156:556:15166:566:16', '1110:11126:725:12136:536:138 246:241 2513:252 2613:26', '1110:111218:121315:239 148:143 259:256 269:26', '1212021 15311 1045 9510 96'],
    ['4 4_2 1_26 2_8 4_2 1_', '3 1/1 2_1 1\\1(1_1)3_1 9_2 4_1 1_3 1/1 1/4_3 1/1 2_1 1\\1(1_1)7_2 4_1 1_', '2 1/1 1/1_1/1 1/1 1/1 2_1 1`1/1_2 1/1_2 1/1 1/1 2_1 1`1/2 1/1 1/4_1/2 1/1 1/1_1/1 1/1 1/1_2 1/1_2 1/1 1/1 2_1 1`1/', '1 1/1 4_1/1 1/1 1/1_1/1 1/1 1/1 1/1_1/1 1/1_1/1 1/1_1/1 1/2 1/1_1/4_1/2 1/1 4_1/1 1/1 1/1 1/1_1/1 1/1_1/1 1/1_1/1 1/', '1/1_1/3 1/1_1/1\\2_1,1_1/1 1/3_1/3_1/1\\2_1,1_1/2 1(1_1)7 1/1_1/3 1/1_1/1 1/3_1/3_1/1\\2_1,1_1/'],
    ['1 1.16-1.2 1.16-1.2 1.16-1.2 1.16-1.2 1.16-1.2 1.16-1.', '1|1 1.14-1.1 2|1 1.14-1.1 2|1 1.14-1.1 2|1 1.14-1.1 2|1 1.14-1.1 2|1 1.14-1.1 1|', '1|1 1|3 7_4 1|1 2|1 1|14 1|1 2|1 1|4 6_4 1|1 2|1 1|3 1_4 1_5 1|1 2|1 1|6 2_6 1|1 2|1 1|1 4_4 4_1 1|1 1|', '1|1 1|2 1|2 3_2 1|3 1|1 2|1 1|6 1_7 1|1 2|1 1|3 1/1 4_1 1`1.2 1|1 2|1 1|2 1|1 1|2 1|1 1|4 1|1 2|1 1|5 1/2 1\\5 1|1 2|1 2|1_3 1\\2 1/3 1_2|1 1|', "1|1 1|2 1|1_1/2 1/1 1/4 1|1 2|1 1|5 1(1_1)6 1|1 2|1 1|3 1`1'2 2_1)1 1|2 1|1 2|1 1|2 1|1 1|2_1|1 1|1_3 1|1 2|1 1|4 1/1 1/1\\1 1\\4 1|1 2|1 1|2 1|3 1\\1/3 1|2 1|1 1|", "1|1 1|6 1/1 1/5 1|1 2|1 1|6 1_7 1|1 2|1 1|3 1_2 1|2_1 1'1.2 1|1 2|1 1|2 1|4_3 1_1|2 1|1 2|1 1|3 1/1 4_1 1\\3 1|1 2|1 1|2 1|1 1|1\\2 1/1|1 1|2 1|1 1|", '1|1 1|5 1/1 1/6 1|1 2|1 1|5 1(1_1)6 1|1 2|1 1|2 1|1 1\\4_1)1 1|2 1|1 2|1 1|6 1_1|1 1|1_3 1|1 2|1 1|1 1_1/1 1/4 1\\1 1\\1_1 1|1 2|1 1|1 1_1|1 1|1_1\\1/1_1|1 1|1_1 1|1 1|', "1|1 1|4 1/1_1/7 1|1 2|1 1|14 1|1 2|1 1|3 1\\6_1.1'2 1|1 2|1 1|5 1|5_1|2 1|1 2|1 2|4_1|2 1|4_2|1 2|1 2|5_2|5_2|1 1|", '1|1 1|14 1|1 2|1 1|14 1|1 2|1 1|14 1|1 2|1 1|14 1|1 2|1 1|14 1|1 2|1 1|14 1|1 1|', "1|1 1'14-1'1 2|1 1'14-1'1 2|1 1'14-1'1 2|1 1'14-1'1 2|1 1'14-1'1 2|1 1'14-1'1 1|", "1 1'16-1'2 1'16-1'2 1'16-1'2 1'16-1'2 1'16-1'2 1'16-1'"],
    ['8 13C7h95 17B', '5 3C12:1C1h5:1h95 1B16:1B', '3 2C15:1C1h5:1h95 1B6:6B5:1B', '2 1C5:8C4:1C1h5:1h95 2B5:1B5 1B5:1B', '1 1C5:1C7 6C1 1h4:1h1 5h11 12e8 12e8 10s7 12e11 1B4:1B5 1B5:1B6u4 6u1 5r3 9r6 9g3 5g4 12e4 5r3 9r', '1C5:1C15 1h4:2h5:3h6 2e12:2e4 2e12:2e4 2s10:1s4 2e12:2e9 1B4:1B5 1B5:1B1u4:1u4 1u4:1u1 1r4:3r9:1r4 1g9:3g4:1g2 2e12:2e2 1r4:3r9:1r', '1C5:1C15 1h14:2h3 1e6:5e5:2e1 1e6:5e5:2e2s13:1s2 1e6:5e5:2e7 1B4:6B5:1B1 1u4:1u4 1u4:1u1 1r17:1r2 1g17:1g1 1e6:5e5:2e1r17:1r', '1C5:1C15 1h7:3h6:1h1 1e6:1e5 1e5:2e6:1e5 1e5:1e1s6:4s5:1s1e6:1e5 1e5:1e7 1B13:2B2 1u4:1u4 1u4:1u1 2r6:5r6:1r1g6:5g6:2g1e6:1e5 1e5:1e2r6:5r6:1r', '1C5:1C15 1h6:1h3 1h6:1h1e7:5e6:2e7:5e6:1e1 1s5:1s2 6s1 1e7:5e6:1e7 1B4:6B5:1B1 1u4:1u4 1u4:1u2 1r5:1r5 1r5:1r1g5:1g5 1g5:1g1 1e7:5e6:1e1 1r5:1r5 1r5:1r', '1C5:1C15 1h5:1h5 1h5:1h1e17:1e1 1e17:1e4 1s6:1s6 1e17:1e8 1B4:1B5 1B5:1B1u4:1u4 1u4:1u2 1r5:1r5 7r1g5:1g5 1g5:1g1 1e17:1e2 1r5:1r5 7r', '1C5:1C15 1h5:1h5 1h5:1h1e6:11e2 1e6:11e8 1s6:1s3 1e6:11e9 1B4:1B5 1B5:1B1u4:1u4 1u4:1u2 1r5:1r12 1g5:1g5 1g5:1g1 1e6:11e3 1r5:1r', '1 1C5:1C7 6C1 1h5:1h5 1h5:1h1e7:1e11 1e7:1e11 6s3 1s5:1s1 1e7:1e18 1B4:1B5 1B5:1B1u5:4u5:1u2 1r5:1r12 1g6:1g4 1g5:1g1 1e7:1e12 1r5:1r', '2 1C5:8C4:1C1 1h5:1h5 1h5:1h1e8:1e10 1e8:1e10 1s5:4s6:1s1e8:1e15 2B5:6B6:1B1u15:2u1r5:1r12 1g7:5g5:1g1 1e8:1e11 1r5:1r', '3 2C15:1C1 1h5:1h5 1h5:1h1 1e8:8e3 1e8:8e2 1s14:1s2 1e8:8e7 1B17:1B2 1u15:1u1r5:1r13 1g16:1g2 1e8:8e3 1r5:1r', '5 3C12:1C1 1h5:1h5 1h5:1h2 2e13:1e4 2e13:1e3 1s11:2s4 2e13:1e7 1B16:1B4 2u8:2u3:1u1r5:1r14 2g14:1g3 2e13:1e3 1r5:1r', '8 13C1 7h5 7h4 14e6 14e4 11s8 14e7 17B7 8u2 4u7r16 8g6:1g5 14e3 7r', '192 1g5:1g', '180 6g6 1g5:1g', '180 1g5:2g3 2g5:1g', '181 1g6:3g7:1g', '182 2g13:1g', '184 3g6:3g', '187 6g'],
    ['3 3_13 1_14 2_2 2_29 3_4 1_9 1_6 1_8 1_', '2 1|1 2_1|3 2_1 1_4 1|1 1|1_6 1o1 1O1 1O1|2 1\\1/2 1|3 3_6 1_1 1_5 1o1 1O1 1O2 1/1 2_1|2 1|1 1|1_6 1(1_1)4 1|1 1|2_4 1(1_1)4 1_1 1_', "2 1|1 1_1|3 1/1 1_1`1 1|3 1|2 1_1|4 1o5 1|1 1|1\\1/1|1 1|2 1/1 1_1 1\\4 1|1 1'1_1|3 1o6 1|1 1(2_3 1|1 1'1 1\\5 1|1 1|4 1|1 1/1 1/4 1|1 1|3 1|1 1'1 1\\", '2 1|3_1|2 1\\2_1,1_1|3 1_1\\2_1|3 1T1S2_1[1O1]1|1_1|2_1|1_1|2 1\\3_1/3 1_1|1_1|1_3 1T1S2_1[1O1]2 1\\3_1|2 1|1_2|1_1|3 1_1|1_1|1_3 1|1_1\\1_1\\3 1_1|1_1|1_2 1|1_2|1_1|', '1_1|5"1|1_1|5"1|1_1|5"1|1 1{6=1|1_1|5"1|1_1|5"1|1_1|5"1|1 1{6=1|1_1|5"1|1_1|5"1|1_1|5"1|1_1|5"1|1_1|5"1|1_1|5"1|', '1"1`1-101-101-1\'1"1`1-101-101-1\'1"1`1-101-101-1\'1.1/1o2-301\'1"1`1-101-101-1\'1"1`1-101-101-1\'1"1`1-101-101-1\'1.1/1o2-301\'1"1`1-101-101-1\'1"1`1-101-101-1\'1"1`1-101-101-1\'1"1`1-101-101-1\'1"1`1-101-101-1\'1"1`1-101-101-1\''],
    ['22F36 17B', '1F20:1F36 1B16:1B', '1F20:1F36 1B6:6B5:1B', '2F6:9F4:1F36 2B5:1B5 1B5:1B', '2 1F5:1F7 6F11o6 11o10 1B4:1B5 1B5:1B2 13a2 5r3 9r', '2 1F5:1F11 2o11:2o2 2o11:2o8 1B4:1B5 1B5:1B2 1a12:1a1 1r4:3r9:1r', '2 1F6:10F1o15:2o15:1o7 1B4:6B5:1B3 9a5:1a1r17:1r', '2 1F15:1F1o5:5o5:2o5:5o5:1o7 1B13:2B13 1a4:1a2r6:5r6:1r', '2 1F15:1F1o4:1o5 1o4:2o4:1o5 1o4:1o7 1B4:6B5:1B5 7a5:1a1 1r5:1r5 1r5:1r', '2 1F6:10F1o4:1o5 1o4:2o4:1o5 1o4:1o7 1B4:1B5 1B5:1B2 2a12:1a1 1r5:1r5 7r', '2 1F5:1F10 1o4:1o5 1o4:2o4:1o5 1o4:1o7 1B4:1B5 1B5:1B1 1a4:4a6:1a1 1r5:1r', '2 1F5:1F10 1o4:1o5 1o4:2o4:1o5 1o4:1o7 1B4:1B5 1B5:1B1a4:1a4 1a5:1a1 1r5:1r', '2F7:2F8 1o5:5o5:2o5:5o5:1o5 2B5:6B6:1B1a4:1a4 1a5:1a1 1r5:1r', '1F8:2F8 1o15:2o15:1o5 1B17:1B1 1a5:4a6:1a1 1r5:1r', '1F8:2F9 2o11:2o2 2o11:2o6 1B16:1B3 1a10:2a3:1a1r5:1r', '11F11 11o6 11o8 17B5 10a2 4a7r'],
]


print("############ Testing Part II ############")
for a, e in zip(args, expected_return_values):
    print('Testing student_alert() with orders = {}'.format(*a))
    print('Expected: {}'.format(e))
    actual = compress_file(*a)
    print('Actual:   {}'.format(actual))
    if e == actual:
        print('Correct!')
        part_counts[1] += 1
    else:
        print('Incorrect!')
print('########################################')
print()

print('Results:')
print(f'Part I:   {part_counts[0]}/{test_counts[0]}')
print(f'Part II:  {part_counts[1]}/{test_counts[1]}')
